{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,OAAQJ,SAASC,cAAc,yBAKjC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAwCK,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAEpDG,EAAK,sBAAqCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,GAEnDA,E,IAXPT,EAAKC,KAAKgB,iBAAiB,UAe3B,SAAkBC,GAChBA,EAAIC,iBAMJ,IAJA,IAAIb,EAASc,OAAOpB,EAAKM,OAAOe,OAC5BZ,EAAQW,OAAOpB,EAAKI,WAAWiB,OAC/BC,EAAOF,OAAOpB,EAAKK,UAAUgB,OAExBE,EAAI,EAAGA,GAAKjB,EAAQiB,GAAK,EAChChB,EAAcgB,EAAGd,GACde,MAAK,SAAAC,G,OAAQ3B,EAAA4B,OAAOC,QAAQF,E,IAC5BG,OAAM,SAAAH,G,OAAQ3B,EAAA4B,OAAOG,QAAQJ,E,IAEhChB,GAASa,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  delayStep: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  let amount = Number(refs.amount.value);\n  let delay = Number(refs.firstDelay.value);\n  let step = Number(refs.delayStep.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(data => Notify.success(data))\n      .catch(data => Notify.failure(data));\n\n    delay += step;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","firstDelay","delayStep","amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","concat","addEventListener","evt","preventDefault","Number","value","step","i","then","data","Notify","success","catch","failure"],"version":3,"file":"03-promises.dd553451.js.map"}